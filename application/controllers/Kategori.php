<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Kategori extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Kategori_model');
    }

    /*
     * Listing of kategori
     */
    function index()
    {
        if ($this->session->userdata("level")!=NULL) {
            $jumlah_data = $this->Kategori_model->jumlah_data();
            $config['base_url'] = base_url() . 'kategori/index/';
            $config['total_rows'] = $jumlah_data;
            $config['per_page'] = 10;

            // Pagination link format 
            $config['num_tag_open'] = '<li>';
            $config['num_tag_close'] = '</li>';
            $config['cur_tag_open'] = '<li class="active"><a href="javascript:void(0);">';
            $config['cur_tag_close'] = '</a></li>';
            $config['next_link'] = 'Next';
            $config['prev_link'] = 'Prev';
            $config['next_tag_open'] = '<li class="pg-next">';
            $config['next_tag_close'] = '</li>';
            $config['prev_tag_open'] = '<li class="pg-prev">';
            $config['prev_tag_close'] = '</li>';
            $config['first_tag_open'] = '<li>';
            $config['first_tag_close'] = '</li>';
            $config['last_tag_open'] = '<li>';
            $config['last_tag_close'] = '</li>';

            $from = $this->uri->segment(3);
            $this->pagination->initialize($config);
            $data['kategori'] = $this->Kategori_model->get_kategori_all($config['per_page'], $from);
            // $data['barang'] = $this->Barang_model->get_all_barang();

            $data['_view'] = 'kategori/index';
            if ($this->session->userdata("level") == 'admin') {
                if ($this->session->userdata("level") == 'admin') {
                    if ($this->session->userdata("level") == 'admin') {
                        $this->load->view('layouts/main', $data);
                    } else {
                        $this->load->view('layouts/main_user', $data);
                    }
                } else {
                    $this->load->view('layouts/main_user', $data);
                }
            } else {
                $this->load->view('layouts/main_user', $data);
            }
        } else {
            $this->load->view('login/login');
        }
    }

    /*
     * Adding a new kategori
     */

    function add()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'nm_kategori' => $this->input->post('nm_kategori'),
            );

            $kategori_id = $this->Kategori_model->add_kategori($params);
            redirect('kategori/index');
        } else {
            $data['_view'] = 'kategori/add';
            if ($this->session->userdata("level") == 'admin') {
                if ($this->session->userdata("level") == 'admin') {
                    $this->load->view('layouts/main', $data);
                } else {
                    $this->load->view('layouts/main_user', $data);
                }
            } else {
                $this->load->view('layouts/main_user', $data);
            }
        }
    }

    /*
     * Editing a kategori
     */
    function edit($id_kategori)
    {
        // check if the kategori exists before trying to edit it
        $data['kategori'] = $this->Kategori_model->get_kategori($id_kategori);

        if (isset($data['kategori']['id_kategori'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'nm_kategori' => $this->input->post('nm_kategori'),
                );

                $this->Kategori_model->update_kategori($id_kategori, $params);
                redirect('kategori/index');
            } else {
                $data['_view'] = 'kategori/edit';
                if ($this->session->userdata("level") == 'admin') {
                    $this->load->view('layouts/main', $data);
                } else {
                    $this->load->view('layouts/main_user', $data);
                }
            }
        } else
            show_error('The kategori you are trying to edit does not exist.');
    }

    /*
     * Deleting kategori
     */
    function remove($id_kategori)
    {
        $kategori = $this->Kategori_model->get_kategori($id_kategori);

        // check if the kategori exists before trying to delete it
        if (isset($kategori['id_kategori'])) {
            $this->Kategori_model->delete_kategori($id_kategori);
            redirect('kategori/index');
        } else
            show_error('The kategori you are trying to delete does not exist.');
    }
}
