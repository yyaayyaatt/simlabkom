<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Perbaikan extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Perbaikan_model');
    }

    /*
     * Listing of barang
     */
    function index()
    {
        if ($this->session->userdata("level")!=NULL) {
            $jumlah_data = $this->Perbaikan_model->jumlah_data();
            $config['base_url'] = base_url() . 'perbaikan/index/';
            $config['total_rows'] = $jumlah_data;
            $config['per_page'] = 10;

            // Pagination link format 
            $config['num_tag_open'] = '<li>';
            $config['num_tag_close'] = '</li>';
            $config['cur_tag_open'] = '<li class="active"><a href="javascript:void(0);">';
            $config['cur_tag_close'] = '</a></li>';
            $config['next_link'] = 'Next';
            $config['prev_link'] = 'Prev';
            $config['next_tag_open'] = '<li class="pg-next">';
            $config['next_tag_close'] = '</li>';
            $config['prev_tag_open'] = '<li class="pg-prev">';
            $config['prev_tag_close'] = '</li>';
            $config['first_tag_open'] = '<li>';
            $config['first_tag_close'] = '</li>';
            $config['last_tag_open'] = '<li>';
            $config['last_tag_close'] = '</li>';

            $from = $this->uri->segment(3);
            $this->pagination->initialize($config);
            $data['perbaikan'] = $this->Perbaikan_model->get_all_perbaikan($config['per_page'], $from);
            // $data['barang'] = $this->Barang_model->get_all_barang();

            $data['_view'] = 'perbaikan/index';
            if ($this->session->userdata("level") == 'admin') {
                $this->load->view('layouts/main', $data);
            } else {
                $this->load->view('layouts/main_user', $data);
            }
        } else {
            $this->load->view('login/login');
        }
    }

    /*
     * Adding a new perbaikan
     */

    function add()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'id_perawatan' => $this->input->post('id_perawatan'),
                'tgl_perbaikan' => date('Y-m-d', strtotime($this->input->post('tgl_perbaikan'))),
                'id_cek' => $this->input->post('id_cek'),
                'solusi' => $this->input->post('solusi'),
                'admin' => $this->session->userdata("id_user")
            );
            //Update status Perawatan
            $params1 = array(
                'perbaikan' => 'sudah'
            );

            $id_perawatan = $this->input->post('id_perawatan');
            $perbaikan_id = $this->Perbaikan_model->add_perbaikan($params);
            $this->Perbaikan_model->update_perawatan($id_perawatan, $params1);
            redirect('perbaikan/index');
        } else {
            $data['user'] = $this->Perbaikan_model->get_all_user();
            $data['asisten'] = $this->Perbaikan_model->get_all_asisten();
            $data['perawatan'] = $this->Perbaikan_model->get_perawatan('belum');
            $data['_view'] = 'perbaikan/add';
            if ($this->session->userdata("level") == 'admin') {
                $this->load->view('layouts/main', $data);
            } else {
                $this->load->view('layouts/main_user', $data);
            }
        }
    }

    /*
     * Editing a perbaikan
     */
    function edit($id_perbaikan)
    {
        // check if the perbaikan exists before trying to edit it
        $data['perbaikan'] = $this->Perbaikan_model->get_perbaikan($id_perbaikan);

        if (isset($data['perbaikan']['id_perbaikan'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'id_perawatan' => $this->input->post('id_perawatan'),
                    'tgl_perbaikan' => $this->input->post('tgl_perbaikan'),
                    'id_cek' => $this->input->post('id_cek'),
                    'solusi' => $this->input->post('solusi'),
                    'admin' => $this->session->userdata("id_user")
                );

                $this->Perbaikan_model->update_perbaikan($id_perbaikan, $params);

                redirect('perbaikan/index');
            } else {
                $data['user'] = $this->Perbaikan_model->get_all_user();
                $data['asisten'] = $this->Perbaikan_model->get_all_asisten();
                $data['perawatan'] = $this->Perbaikan_model->get_perawatan('sudah');
                $data['_view'] = 'perbaikan/edit';
                if ($this->session->userdata("level") == 'admin') {
                    $this->load->view('layouts/main', $data);
                } else {
                    $this->load->view('layouts/main_user', $data);
                }
            }
        } else
            show_error('The perbaikan you are trying to edit does not exist.');
    }

    /*
     * Deleting perbaikan
     */
    function remove($id_perbaikan)
    {
        $perbaikan = $this->Perbaikan_model->get_perbaikan($id_perbaikan);

        // check if the perbaikan exists before trying to delete it
        if (isset($perbaikan['id_perbaikan'])) {
            $this->Perbaikan_model->delete_perbaikan($id_perbaikan);
            redirect('perbaikan/index');
        } else
            show_error('The perbaikan you are trying to delete does not exist.');
    }
}
