<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Peminjaman extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Peminjaman_model');
        $this->load->library('pdf');
    }

    /*
     * Listing of barang
     */
    function index()
    {
        if ($this->session->userdata("level")!=NULL) {
            $jumlah_data = $this->Peminjaman_model->jumlah_data();
            $config['base_url'] = base_url() . 'peminjaman/index/';
            $config['total_rows'] = $jumlah_data;
            $config['per_page'] = 10;

            // Pagination link format 
            $config['num_tag_open'] = '<li>';
            $config['num_tag_close'] = '</li>';
            $config['cur_tag_open'] = '<li class="active"><a href="javascript:void(0);">';
            $config['cur_tag_close'] = '</a></li>';
            $config['next_link'] = 'Next';
            $config['prev_link'] = 'Prev';
            $config['next_tag_open'] = '<li class="pg-next">';
            $config['next_tag_close'] = '</li>';
            $config['prev_tag_open'] = '<li class="pg-prev">';
            $config['prev_tag_close'] = '</li>';
            $config['first_tag_open'] = '<li>';
            $config['first_tag_close'] = '</li>';
            $config['last_tag_open'] = '<li>';
            $config['last_tag_close'] = '</li>';

            $from = $this->uri->segment(3);
            $this->pagination->initialize($config);
            $data['peminjaman'] = $this->Peminjaman_model->get_all_peminjaman($config['per_page'], $from);
             //$data['blmkembali'] = $this->Peminjaman_model->get_peminjaman_by();

            $data['_view'] = 'peminjaman/index';
            if ($this->session->userdata("level") == 'admin') {
                $this->load->view('layouts/main', $data);
            } else {
                $this->load->view('layouts/main_user', $data);
            }
        } else {
            $this->load->view('login/login');
        }
    }

    function cetak()
    {
        $tgl_awal = $this->input->post('tgl_awal');
        $tgl_ahir = $this->input->post('tgl_ahir');
        if ($tgl_awal != 0) {
            $pdf = new FPDF('P', 'mm', 'A4');
            // membuat halaman baru
            $pdf->AddPage();
            // setting jenis font yang akan digunakan
            $pdf->SetFont('Arial', 'B', 16);
            // mencetak string 
            $pdf->SetFont('Arial', 'B', 14);
            $pdf->Image('resources/img/poltek.png', 10, 6, 28);
            $pdf->Cell(190, 7, 'UPT SISTEM INFORMASI', 0, 1, 'C');
            $pdf->SetFont('Arial', 'B', 18);
            $pdf->Cell(190, 7, 'POLITEKNIK HARAPAN BERSAMA TEGAL', 0, 1, 'C');
            $pdf->SetFont('Arial', 'B', 12);
            $pdf->Cell(190, 7, 'LAPORAN PEMINJAMAN BARANG', 0, 1, 'C');
            $pdf->SetFont('Arial', '', 9);
            $pdf->Cell(190, 6, 'Periode ' . date('d-m-Y', strtotime($tgl_awal)) . ' s/d ' . date('d-m-Y', strtotime($tgl_ahir)), 0, 1, 'C');

            // Memberikan space kebawah agar tidak terlalu rapat
            $pdf->Ln();
            $pdf->Cell(10, 7, '', 0, 1);
            $pdf->SetFont('Arial', 'B', 9);
            $pdf->Cell(10, 6, 'NO.', 1, 0, 'C');
            $pdf->Cell(35, 6, 'NAMA PEMINJAM', 1, 0);
            $pdf->Cell(25, 6, 'KELAS', 1, 0);
            $pdf->Cell(35, 6, 'BARANG', 1, 0);
            $pdf->Cell(10, 6, 'JML', 1, 0, 'C');
            $pdf->Cell(28, 6, 'TGL. PINJAM', 1, 0, 'C');
            $pdf->Cell(28, 6, 'TGL. KEMBALI', 1, 0, 'C');
            $pdf->Cell(20, 6, 'STATUS', 1, 1);
            $pdf->SetFont('Arial', '', 9);

            $barang = $this->db->select('*');
            $barang = $this->db->from('peminjaman a');
            $barang = $this->db->join('barang b', 'b.id_barang=a.id_barang', 'left');
            $barang = $this->db->join('user c', 'c.id_user=a.id_user', 'left');
            $barang = $this->db->join('kelas d', 'd.id_kelas=a.kelas', 'left');
            $barang = $this->db->where('a.tgl_pinjam BETWEEN "' . date('Y-m-d', strtotime($tgl_awal)) . '" and "' . date('Y-m-d', strtotime($tgl_ahir)) . '"');
            $barang = $this->db->order_by('a.id_peminjaman', 'desc');
            $barang = $this->db->get()->result();
            $X = 0;
            foreach ($barang as $row) {
                $X += 1;
                $pdf->Cell(10, 6, $X, 1, 0, 'C');
                $pdf->Cell(35, 6, $row->nama_peminjam, 1, 0);
                $pdf->Cell(25, 6, $row->nm_kelas, 1, 0);
                $pdf->Cell(35, 6, $row->nm_barang, 1, 0);
                $pdf->Cell(10, 6, $row->jumlah, 1, 0, 'C');
                $pdf->Cell(28, 6, date("d-m-Y", strtotime($row->tgl_pinjam)), 1, 0, 'C');
                $pdf->Cell(28, 6, date("d-m-Y", strtotime($row->tgl_kembali)), 1, 0, 'C');
                $pdf->Cell(20, 6, $row->status, 1, 1);
            }
            $pdf->Output();
        } else {
            $data['_view'] = 'peminjaman/cetak';
            if ($this->session->userdata("level") == 'admin') {
                $this->load->view('layouts/main', $data);
            } else {
                $this->load->view('layouts/main_user', $data);
            }
        }
    }
    /*
     * Adding a new peminjaman
     */

    function add()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'id_peminjaman' => $this->input->post('id_peminjaman'),
                'nama_peminjam' => $this->input->post('nama_peminjam'),
                'kelas' => $this->input->post('kelas'),
                'id_barang' => $this->input->post('id_barang'),
                'jumlah' => $this->input->post('jumlah'),
                'tgl_pinjam' => $this->input->post('tgl_pinjam'),
                'tgl_kembali' => $this->input->post('tgl_kembali'),
                'keterangan' => $this->input->post('keterangan'),
                'status' => $this->input->post('status'),
                'id_user' => $this->session->userdata("id_user"),
            );
            $peminjaman_id = $this->Peminjaman_model->add_peminjaman($params);
            redirect('peminjaman/index');
        } else {
            $data['kelas'] = $this->Peminjaman_model->get_all_kelas();
            $data['barang'] = $this->Peminjaman_model->get_all_barang();
            $data['_view'] = 'peminjaman/add';
            if ($this->session->userdata("level") == 'admin') {
                $this->load->view('layouts/main', $data);
            } else {
                $this->load->view('layouts/main_user', $data);
            }
        }
    }

    /*
     * Editing a peminjaman
     */
    function edit($id_peminjaman)
    {
        // check if the peminjaman exists before trying to edit it
        $data['peminjaman'] = $this->Peminjaman_model->get_peminjaman($id_peminjaman);

        if (isset($data['peminjaman']['id_peminjaman'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'id_peminjaman' => $this->input->post('id_peminjaman'),
                    'nama_peminjam' => $this->input->post('nama_peminjam'),
                    'kelas' => $this->input->post('kelas'),
                    'id_barang' => $this->input->post('id_barang'),
                    'jumlah' => $this->input->post('jumlah'),
                    'tgl_pinjam' => $this->input->post('tgl_pinjam'),
                    'tgl_kembali' => $this->input->post('tgl_kembali'),
                    'keterangan' => $this->input->post('keterangan'),
                    'status' => $this->input->post('status'),
                    'id_user' => $this->session->userdata("id_user"),
                );

                $this->Peminjaman_model->update_peminjaman($id_peminjaman, $params);
                redirect('peminjaman/index');
            } else {
                $data['kelas'] = $this->Peminjaman_model->get_all_kelas();
                $data['barang'] = $this->Peminjaman_model->get_all_barang();
                $data['_view'] = 'peminjaman/edit';
                if ($this->session->userdata("level") == 'admin') {
                $this->load->view('layouts/main', $data);
            } else {
                $this->load->view('layouts/main_user', $data);
            }
            }
        } else
            show_error('The peminjaman you are trying to edit does not exist.');
    }

    /*
     * Deleting peminjaman
     */
    function remove($id_peminjaman)
    {
        $peminjaman = $this->Peminjaman_model->get_peminjaman($id_peminjaman);

        // check if the peminjaman exists before trying to delete it
        if (isset($peminjaman['id_peminjaman'])) {
            $this->Peminjaman_model->delete_peminjaman($id_peminjaman);
            redirect('peminjaman/index');
        } else
            show_error('The peminjaman you are trying to delete does not exist.');
    }
}
